How we can change the hostname
==============================
goto root user-----> sudo -i
then after we can execute the command-----> hostname <name-of-the-host> && bash



https://raw.githubusercontent.com/vsaini44/KubernetesRepo/master/Docker-kuber1.21
===================================================================================
# by using the above link we can get the script place it in a file then after execute that file
# for example the file name is ---->a 
# so here we can execute that file by using the command------> bash a  (or) ./a.sh
# after successful execution we can get the {-- 1 token --} in the master machine we can copy that token and execute over the Node machines

# script we have to execute
============================
#!/bin/bash 
sudo apt update

sudo apt install apt-transport-https ca-certificates curl software-properties-common  -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
sudo apt update
apt-cache policy docker-ce -y
sudo apt install docker-ce -y
wget -q -O - https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo deb http://apt.kubernetes.io/ kubernetes-xenial main | sudo tee /etc/apt/sources.list.d/kubernetes.list
apt update
apt install kubelet=1.21.1-00 kubeadm=1.21.1-00 kubectl=1.21.1-00 -y
sysctl net.bridge.bridge-nf-call-iptables=1

#on master
#kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt
kubeadm init --pod-network-cidr=192.168.0.0/16 >> cluster_initialized.txt
mkdir /root/.kube
cp /etc/kubernetes/admin.conf /root/.kube/config
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
systemctl restart kubelet.service
kubeadm token create --print-join-command



# Script we have to execute in the Node machines
=================================================

#!/bin/bash 
sudo apt update

sudo apt install apt-transport-https ca-certificates curl software-properties-common  -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
sudo apt update
apt-cache policy docker-ce -y
sudo apt install docker-ce -y
wget -q -O - https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo deb http://apt.kubernetes.io/ kubernetes-xenial main | sudo tee /etc/apt/sources.list.d/kubernetes.list
apt update
apt install kubelet=1.21.1-00 kubeadm=1.21.1-00 kubectl=1.21.1-00 -y
sysctl net.bridge.bridge-nf-call-iptables=1

=================================================================================
or else we can execute the commands one by one

to get libraries
=================
kubectl completion bash >> /tmp/abc
source  /temp/abc
kubectl <press tab two-times>

the bellow commands will say which paramiter we have to use in perticular yml file
====================================================================================
kubectl explain pod
kubectl explain service
kubectl explain repicaset
kubectl explain replicationcontroller
kubectl  explain deployment

Command to show the labels
==========================
kubectl get pods --show-labels

 Commandto set a label to the perticular pod
========================================
kubectl label pod <pod-name> env=<label-name>
EX:- kubectl label pod pod1 env=dev1

if you want to override the env by using the bellow command
==============================================================
kubectl label pod pod1 env=prod --override


kubectl create -f pod.yaml
kubectl get pods
vim pod.yaml
 
kubectl get pods
kubectl get pods  --show-label
kubectl get pods  --show-labels
kubectl label pod pod1 env=dev
kubectl label pod pod2 env=prod
kubectl get pods  --show-labels
vim pod.yaml
kubectl create -f pod.yaml
kubectl get pods  --show-labels
kubectl get pods -l env=prod

kubectl run image
kubectl run image --help
cat pod.yaml
kubectl get pods --show-labels
kubectl label pod pod1 dc=mumbai
kubectl get pods --show-labels
kubectl label pod pod1 env=prod
kubectl label pod pod1 env=prod --overwrite
kubectl get pods --show-labels
kubectl describe pod pod1 | less
kubectl annotate pod pod1 description="test pod for testing"
kubectl describe pod pod1 | less
kubectl get ns
kubectl create ns test-project1
kubectl get ns | grep test-project
 

